aes(x = Year + 0.7, y = Platform,
color = Platform,
label = Platform),
check_overlap = T)+
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
gg <- t3 %>%
ggplot(aes(y=Platform,x=Year))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
# geom_hline(xintercept = seq(1980,2016,by=1), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
geom_line_interactive(size = 1.2,
alpha = 0.4,
aes(tooltip = texto)) +
geom_point_interactive(data = t3 %>%
group_by(Platform) %>%
filter(Year == max(Year) | Year == min(Year)),
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = t3 %>%
group_by(Platform) %>%
filter(Year == max(Year)),
aes(x = Year + 0.7, y = Platform,
color = Platform,
label = Platform),
check_overlap = T)+
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
game_sales %>%
ggplot(aes(Year))+
geom_bar(na.rm=T,color="black",fill="#8800FF")+
labs(title="Publikacje gier na przestrzeni lat",
x="Rok publikacji",
y="Liczba tytułów")+
#  scale_x_discrete()+
#  scale_x_discrete(breaks = 1980:2020)+
scale_x_continuous(breaks=seq(1980,2016,by=2))+
geom_hline(yintercept = c(500,1000), linetype = "dashed", color = "black", alpha = 0.8, linewidth=1.3)+
theme_classic(base_size = 40)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 48, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
#,plot.background = element_rect(fill = "#141414")
)
#8800FF
game_sales %>%
mutate(Sales=Global_Sales*1000000) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Sales/sum(Sales)*100,2),"%"))
game_sales %>%
mutate(Sales=Global_Sales*1000000) %>%
select(Platform,Sales)
game_sales %>%
mutate(Sales=Global_Sales*1000000) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE)
game_sales %>%
mutate(Sales=Global_Sales*1000000) %>%
select(Platform,Sales)
game_sales[which(game_sales$Platform=="DS"),]
game_sales[which(game_sales$Platform=="DS"),] %>%
arrange(Year)
game_sales[which(game_sales$Platform=="DS"),] %>%
arrange(Year) %>%
head()
game_sales[which(game_sales$Platform=="DS"),] %>%
arrange(Year) %>%
select(Rank,Name,Platform,Year,Genre,Global_Sales) %>%
head()
game_sales[which(game_sales$Platform=="DS"),] %>%
arrange(Year) %>%
select(Rank,Name,Platform,Year,Genre,Global_Sales) %>%
head(1)
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(y=Year)) %>%
geom_jitter()
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(y=Year))+
geom_jitter()
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_histogram()
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_density()
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_dotplot()
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_dotplot()+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
theme_classic(base_size = 40)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,axis.text.y = element_text(angle = -30, vjust=0)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = c(0.2, 0.75)
,legend.background = element_rect(fill = "white")
,legend.title = element_blank()
)
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_dotplot()+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
theme_classic(base_size = 10)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,axis.text.y = element_text(angle = -30, vjust=0)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = c(0.2, 0.75)
,legend.background = element_rect(fill = "white")
,legend.title = element_blank()
)
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_dotplot()+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
theme_classic(base_size = 10)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = c(0.2, 0.75)
,legend.background = element_rect(fill = "white")
,legend.title = element_blank()
)
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_boxplot()+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
theme_classic(base_size = 10)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = c(0.2, 0.75)
,legend.background = element_rect(fill = "white")
,legend.title = element_blank()
)
theme_classic(base_size = 10)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
,legend.background = element_rect(fill = "white")
,legend.title = element_blank()
)
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_violin()+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
labs(
title="Gry wydane na Nintendo DS",
y="Rok wydania"
)+
theme_classic(base_size = 10)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
,legend.background = element_rect(fill = "white")
,legend.title = element_blank()
)
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_boxplot()+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
labs(
title="Gry wydane na Nintendo DS",
y="Rok wydania"
)+
theme_classic(base_size = 10)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
,legend.background = element_rect(fill = "white")
,legend.title = element_blank()
)
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_boxplot()+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
labs(
title="Gry wydane na Nintendo DS",
y="Rok wydania"
)+
theme_classic(base_size = 10)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 17, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
,legend.background = element_rect(fill = "white")
,legend.title = element_blank()
)
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_boxplot()+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
labs(
title="Gry wydane na Nintendo DS",
x="Rok wydania"
)+
theme_classic(base_size = 10)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 17, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
,legend.background = element_rect(fill = "white")
,legend.title = element_blank()
)
game_sales[which(game_sales$Platform=="DS"),] %>%
ggplot(aes(x=Year))+
geom_boxplot()+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
labs(
title="Gry wydane na Nintendo DS",
x="Rok wydania"
)+
theme_classic(base_size = 10)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 17, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,axis.text.y = element_blank()
,legend.position = "none"
,legend.background = element_rect(fill = "white")
,legend.title = element_blank()
)
game_sales[which(game_sales$Platform=="DS"),] %>%
arrange(Year) %>%
select(Rank,Name,Platform,Year,Genre,Global_Sales) %>%
head(3)
game_sales[which(game_sales$Platform=="DS"),] %>%
arrange(Year) %>%
select(Rank,Name,Platform,Year,Genre,Global_Sales) %>%
head(1)
game_sales[which(game_sales$Platform=="DS"),] %>%
arrange(Year) %>%
select(Rank,Name,Platform,Year,Genre,Global_Sales) %>%
head(1) %>%
kbl() %>%
kable_styling()
game_sales[which(game_sales$Platform=="DS"),] %>%
arrange(Year) %>%
select(Rank,Name,Platform,Year,Genre,Global_Sales) %>%
head(1)
game_sales[-which(game_sales$Platform=="DS" & game_sales$Year==1985),]
game_sales[-which(game_sales$Platform=="DS" && game_sales$Year==1985),]
game_sales[-which(game_sales$Platform=="DS"&game_sales$Year==1985),]
game_sales[which(game_sales$Platform=="DS"&game_sales$Year==1985),]
game_sales <- game_sales[-which(game_sales$Platform=="DS"&game_sales$Year==1985),]
library(tidyverse) #ogólne
library(ggplot2) #wykresy
library(kableExtra) #tabelki
library(doParallel) #przyśpieszenie sprzętowe
registerDoParallel(cores = 8)
library(magick) #animowane wykresy
library(gganimate) #animowane wykresy
library(ggiraph) #interaktywne wykresy
library(ggthemes) #wykresy
library(highcharter) #interaktywne placki
#library(geomtextpath) #był potrzebny do cyklu zycia platform (nieinteraktywnego)
game_sales <- read.csv("C:/Users/Michc/Dropbox/Uczelnia/Semestr 5/Projekt z analizy danych/Projekt/dane/video_games.csv",na.strings = "N/A")
game_sales <- game_sales %>%
`rownames<-`(NULL)
game_sales$Name <- as.factor(game_sales$Name)
game_sales$Platform <- as.factor(game_sales$Platform)
game_sales$Genre <- as.factor(game_sales$Genre)
game_sales$Publisher <- as.factor(game_sales$Publisher)
game_sales$Year <- as.numeric(game_sales$Year)
game_sales[which(game_sales$Publisher=="Unknown"),6] <- NA
#zestawienie braków danych z podziałem na kolumny
kbl(tibble(Rank=sum(is.na(game_sales$Rank)),
Name=sum(is.na(game_sales$Name)),
Platform=sum(is.na(game_sales$Platform)),
Year=sum(is.na(game_sales$Year)),
Genre=sum(is.na(game_sales$Genre)),
Publisher=sum(is.na(game_sales$Publisher)),
NA_Sales=sum(is.na(game_sales$NA_Sales)),
EU_Sales=sum(is.na(game_sales$EU_Sales)),
JP_Sales=sum(is.na(game_sales$JP_Sales)),
Other_sales=sum(is.na(game_sales$Other_Sales)),
Global_Sales=sum(is.na(game_sales$Global_Sales)),
'Year & Publisher'=count(game_sales[which(is.na(game_sales$Year) & is.na(game_sales$Publisher)),])), table.attr = "style = \"color: black;\""
,caption = "<span style='font-size:30px'>Zestawienie braków danych z podziałem na zmienne</span>"
) %>%
kable_styling("basic", full_width = T,position = "float_left") %>%
column_spec(c(4,6), color = "#FF3030") %>%
column_spec(12, color = "orange") %>%
column_spec(c(1:3,5,7:11), color = "#1E90FF")
missings <- game_sales[which(is.na(game_sales$Year) | is.na(game_sales$Publisher)),] %>%
mutate(Rank = as.numeric(Rank))
#median(missings$Rank)
#mean(missings$Global_Sales)
#jakie statystyki mają wartości z brakami
tibble("Średnia z `Rank`"= mean(missings$Rank),"Mediana z `Global_Sales`"= median(missings$Global_Sales)) %>%
kbl() %>%
kable_styling()
game_sales <- na.omit(game_sales)
# pierwsze 12 tytułów alfabetycznie
head(levels(game_sales$Name), n = 12)
tidytext::unnest_tokens(data.frame(levels(game_sales$Name)))
data.frame(game_sales[which(game_sales$Year>2016),]) %>%
`rownames<-`(NULL) %>%
select(Rank,Name,Platform,Year,Genre,Publisher,Global_Sales) %>%
kbl() %>%
kable_styling()
game_sales <- game_sales[-which(game_sales$Year>2016),]
head(game_sales,n=1) %>%
kbl() %>%
kable_styling()
game_sales <- game_sales[-1,]
game_sales[which(game_sales$Platform=="DS"&game_sales$Year==1985),Year] <- 2010
game_sales[which(game_sales$Platform=="DS"&game_sales$Year==1985),"Year"] <- 2010
game_sales[which(game_sales$Platform=="DS"),] %>%
arrange(Year) %>%
select(Rank,Name,Platform,Year,Genre,Global_Sales) %>%
head(1) %>%
kbl() %>%
kable_styling()
# t1 <- game_sales %>%
#   select(Year,Platform) %>%
#   aggregate(.~Platform, FUN = min) %>%
#   pivot_longer(-Platform) %>%
#   mutate(min = value) %>%
#   select(Platform, min)
#
#
# t2 <- game_sales %>%
#   select(Year,Platform) %>%
#   aggregate(.~Platform, FUN = max) %>%
#   pivot_longer(-Platform) %>%
#   mutate(max = value) %>%
#   select(Platform, max)
#
# t <- merge(t1,t2, by="Platform", sort=T)
#
# t[order(t$min),] %>%
#   `row.names<-`(NULL) %>%
#   `colnames<-`(c("Platforma","Rok startu","Rok końca")) %>%
#   kbl() %>%
#   kable_styling()%>%
#   scroll_box(width = "100%", height = "200px")
#
# #niepotrzebne po wykonaniu interaktywnego
t3 <- game_sales %>%
select(Year,Platform,Name) %>%
aggregate(.~Platform+Year, FUN = sum)
t3 <- t3[order(t3$Platform),] %>%
group_by(Platform)%>%
mutate(texto = paste0(Platform, "\n",
min(Year), "-",max(Year)
))
# #nieinteraktywny
# t3 %>%
#   ggplot(aes(x=Platform,y=Year))+
#   geom_textline(aes(label=Platform),size=4.3)+
#   scale_y_continuous(breaks=seq(1980,2016,by=2))+
#   geom_hline(yintercept = seq(1980,2016,by=2), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
#   coord_flip()+
#   theme_classic(base_size = 20)+
#   theme(
#     axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
#     ,plot.title = element_text(color = "black", size = 32, face = "bold")
#     ,plot.subtitle = element_text(size = 25, face = "bold")
#   )
# interaktywny
gg <- t3 %>%
ggplot(aes(y=Platform,x=Year))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
# geom_hline(xintercept = seq(1980,2016,by=1), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
geom_line_interactive(size = 1.2,
alpha = 0.4,
aes(tooltip = texto)) +
geom_point_interactive(data = t3 %>%
group_by(Platform) %>%
filter(Year == max(Year) | Year == min(Year)),
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = t3 %>%
group_by(Platform) %>%
filter(Year == max(Year)),
aes(x = Year + 0.7, y = Platform,
color = Platform,
label = Platform),
check_overlap = T)+
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,legend.position = "none"
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
rm(list = c('t','t1','t2'))
game_sales %>%
mutate(Sales=Global_Sales*1000000) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Sales/sum(Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Sales),
name = "Sprzedanych kopii gier"
) %>%
hc_title(
text = "Udział platform w rynku growym w latach 1980-2016",
margin = 20,
align = "left",
style = list(color = "black", useHTML = TRUE)
)
game_sales %>%
mutate(Sales=Global_Sales*1000000) %>%
select(Platform,Sales)
game_sales %>%
mutate(Sales=Global_Sales*1000000) %>%
select(Platform,Sales)%>%
tail(20)
game_sales %>%
mutate(Sales=Global_Sales*10000000) %>%
select(Platform,Sales)%>%
tail(20)
game_sales %>%
mutate(Sales=Global_Sales*10000000) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Sales/sum(Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Sales),
name = "Sprzedanych kopii gier"
) %>%
hc_title(
text = "Udział platform w rynku growym w latach 1980-2016",
margin = 20,
align = "left",
style = list(color = "black", useHTML = TRUE)
)
