,plot.subtitle = element_text(size = 25, face = "bold")
)
t3 %>%
ggplot(aes(x=Platform,y=Year))+
geom_textline(aes(label=Platform),size=4.3)+
scale_y_continuous(breaks=seq(1980,2016,by=2))+
#scale_color_gradient(low="red",high="green")+
geom_hline(yintercept = seq(1980,2016,by=2), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
coord_flip()+
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
)
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>% filter(Year == max(Year)-1),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>% filter(Year == max(Year)),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
ggdane
rbind(ggdane,list(Genre="Puzzle",Year=2016)
)
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>%
group_by(Genre) %>%
filter(Year == max(Year) %>%
ungroup()),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
)
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>%
group_by(Genre) %>%
filter(Year == max(Year)),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
View(ggdane)
install.packages("highcharter")
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(Platform,desc(Global_Sales))
library(tidyverse) #ogólne
library(ggplot2) #wykresy
library(kableExtra) #tabelki
library(doParallel) #przyśpieszenie sprzętowe
registerDoParallel(cores = 8)
library(magick) #animowane wykresy
library(gganimate) #animowane wykresy
library(ggiraph) #interaktywne wykresy
library(ggthemes) #wykresy
library(highcharter) #interaktywne placki
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(Platform,desc(Global_Sales))
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(Platform,desc(Global_Sales))
ungroup() %>%
hchart(
"pie", hcaes(x = Platform, y = Global_Sales),
name = "Udział Platform"
)
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(Platform,desc(Global_Sales)) %>%
ungroup() %>%
hchart(
"pie", hcaes(x = Platform, y = Global_Sales),
name = "Udział Platform"
)
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(Platform,desc(Global_Sales)) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ", Global_Sales/sum(Global_Sales),"%")
hchart(
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(Platform,desc(Global_Sales)) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ", Global_Sales/sum(Global_Sales),"%") %>%
hchart(
"pie", hcaes(x = texto, y = Global_Sales),
name = "Udział Platform"
)
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(Platform,desc(Global_Sales)) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ", Global_Sales/sum(Global_Sales),"%")
game_sales %>%
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(Platform,desc(Global_Sales)) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
Global_Sales/sum(Global_Sales),"\%")) %>%
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(Platform,desc(Global_Sales)) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
Global_Sales/sum(Global_Sales),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Global_Sales),
name = "Udział Platform"
)
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(Platform,desc(Global_Sales)) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Global_Sales/sum(Global_Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Global_Sales),
name = "Udział Platform"
)
game_sales %>%
select(Platform,Global_Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Global_Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Global_Sales/sum(Global_Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Global_Sales),
name = "Udział Platform"
)
game_sales %>%
mutate(Sales=Global_Sales) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Sales/sum(Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Sales),
name = "Udział Platform"
)
game_sales %>%
mutate(Sales=Global_Sales) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Sales/sum(Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Sales),
name = "Sprzedanych tytułóW"
)
game_sales %>%
mutate(Sales=Global_Sales) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Sales/sum(Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Sales),
name = "Sprzedanych kopii gier"
)
game_sales %>%
mutate(Sales=Global_Sales) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Sales/sum(Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Sales),
name = "Sprzedanych kopii gier",
title="tytuł"
)
game_sales %>%
mutate(Sales=Global_Sales) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Sales/sum(Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Sales),
name = "Sprzedanych kopii gier"
) %>%
hc_title(
text = "Udział platform w rynku growym w latach 1980-2016",
margin = 20,
align = "left",
style = list(color = "#22A884", useHTML = TRUE)
)
game_sales %>%
mutate(Sales=Global_Sales) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Sales/sum(Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Sales),
name = "Sprzedanych kopii gier"
) %>%
hc_title(
text = "Udział platform w rynku growym w latach 1980-2016",
margin = 20,
align = "left",
style = list(color = "black", useHTML = TRUE)
)
game_sales %>%
mutate(Sales=Global_Sales*1000000) %>%
select(Platform,Sales) %>%
aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
group_by(Platform) %>%
arrange(desc(Sales),Platform) %>%
ungroup() %>%
mutate(texto = paste0(Platform," ",
round(Sales/sum(Sales)*100,2),"%")) %>%
hchart("pie",
hcaes(x = texto, y = Sales),
name = "Sprzedanych kopii gier"
) %>%
hc_title(
text = "Udział platform w rynku growym w latach 1980-2016",
margin = 20,
align = "left",
style = list(color = "black", useHTML = TRUE)
)
t1 <- game_sales %>%
select(Year,Platform) %>%
aggregate(.~Platform, FUN = min) %>%
pivot_longer(-Platform) %>%
mutate(min = value) %>%
select(Platform, min)
t2 <- game_sales %>%
select(Year,Platform) %>%
aggregate(.~Platform, FUN = max) %>%
pivot_longer(-Platform) %>%
mutate(max = value) %>%
select(Platform, max)
t <- merge(t1,t2, by="Platform", sort=T)
t[order(t$min),] %>%
`row.names<-`(NULL) %>%
`colnames<-`(c("Platforma","Rok startu","Rok końca")) %>%
kbl() %>%
kable_styling()%>%
scroll_box(width = "100%", height = "200px")
t3 <- game_sales %>%
select(Year,Platform,Name) %>%
aggregate(.~Platform+Year, FUN = sum)
t3 <- t3[order(t3$Platform),]
library(geomtextpath)
t3 %>%
ggplot(aes(x=Platform,y=Year))+
geom_textline(aes(label=Platform),size=4.3)+
scale_y_continuous(breaks=seq(1980,2016,by=2))+
#scale_color_gradient(low="red",high="green")+
geom_hline(yintercept = seq(1980,2016,by=2), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
coord_flip()+
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
)
rm(list = c('t','t1','t2'))
t3
t3 <- t3[order(t3$Platform),] %>%
mutate(texto = paste0(Platform, "\n",
Year, ": ",
format(round(Name*1000000, 0),
big.mark = ",")))
gg <- t3 %>%
ggplot(aes(x=Platform,y=Year))+
scale_y_continuous(breaks=seq(1980,2016,by=2))+
#scale_color_gradient(low="red",high="green")+
geom_hline(yintercept = seq(1980,2016,by=1), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
coord_flip()+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(data = t3 %>%
group_by(Platform) %>%
filter(Year == max(Year) | Year == min(Year))
aes(tooltip = texto), #specifies tooltip for ggiraph
gg <- t3 %>%
ggplot(aes(x=Platform,y=Year))+
scale_y_continuous(breaks=seq(1980,2016,by=2))+
#scale_color_gradient(low="red",high="green")+
geom_hline(yintercept = seq(1980,2016,by=1), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
coord_flip()+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(data = t3 %>%
group_by(Platform) %>%
filter(Year == max(Year) | Year == min(Year)),
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>%
group_by(Genre) %>%
filter(Year == max(Year)),
aes(x = Year + 0.7, y = Platform,
color = Genre,
label = Genre),
check_overlap = T)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
gg <- t3 %>%
ggplot(aes(y=Platform,x=Year))+
scale_x_continuous(breaks=seq(1980,2016,by=2))+
#scale_color_gradient(low="red",high="green")+
geom_hline(xintercept = seq(1980,2016,by=1), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(data = t3 %>%
group_by(Platform) %>%
filter(Year == max(Year) | Year == min(Year)),
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>%
group_by(Genre) %>%
filter(Year == max(Year)),
aes(x = Year + 0.7, y = Platform,
color = Genre,
label = Genre),
check_overlap = T)+
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
gg
