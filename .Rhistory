group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
complete(Genre, fill=list(Global_Sales = 0)) %>%
mutate(Rank=round(13-rank(Global_Sales)),0) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>% filter(Year == max(Year)),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
#,aspect.ratio=4/10
#,plot.background = element_rect(fill = "#141414")
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
game_sales %>%
select(Year,Genre,Global_Sales) %>%
aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
complete(Genre, fill=list(Global_Sales = 0)) %>%
mutate(Rank=round(13-rank(Global_Sales,na.last = TRUE),0)) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
game_sales %>%
select(Year,Genre,Global_Sales) %>%
aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
complete(Genre, fill=list(Global_Sales = 0)) %>%
mutate(Rank=round(13-rank(Global_Sales,na.last = TRUE)),0) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
game_sales %>%
select(Year,Genre,Global_Sales) %>%
aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
complete(Genre, fill=list(Global_Sales = 0)) %>%
mutate(Rank=round(13-rank(Global_Sales,na.last = TRUE))) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
game_sales %>%
select(Year,Genre,Global_Sales) %>%
aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
#complete(Genre, fill=list(Global_Sales = 0)) %>%
mutate(Rank=round(13-rank(Global_Sales,na.last = TRUE))) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
game_sales %>%
select(Year,Genre,Global_Sales) %>%
aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
mutate(Rank=row_number(Year)) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
game_sales %>%
select(Year,Genre,Global_Sales) %>%
aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
complete(Genre, fill=list(Global_Sales = 0)) %>%
mutate(Rank=round(13-rank(Global_Sales,na.last = TRUE,ties.method="max"))) %>%
# mutate(Rank=row_number(Year)) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
game_sales %>%
select(Year,Genre,Global_Sales) %>%
aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
complete(Genre, fill=list(Global_Sales = 0)) %>%
mutate(Rank=round(13-rank(Global_Sales,na.last = TRUE,ties.method="last"))) %>%
# mutate(Rank=row_number(Year)) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
ggdane <- game_sales %>%
select(Year,Genre,Global_Sales) %>%
aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
complete(Genre, fill=list(Global_Sales = 0)) %>%
mutate(Rank=round(13-rank(Global_Sales,na.last = TRUE,ties.method="last"))) %>%
# mutate(Rank=row_number(Year)) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>% filter(Year == max(Year)),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
#,aspect.ratio=4/10
#,plot.background = element_rect(fill = "#141414")
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
game_sales %>%
select(Year,Genre,Global_Sales) %>%
aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
# complete(Genre, fill=list(Global_Sales = 0)) %>%
# mutate(Rank=round(13-rank(Global_Sales,na.last = TRUE,ties.method="last"))) %>%
mutate(Rank=row_number(Year)) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
ggdane <- game_sales %>%
select(Year,Genre,Global_Sales) %>%
aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
group_by(Year) %>%
arrange(Year,desc(Global_Sales)) %>%
# complete(Genre, fill=list(Global_Sales = 0)) %>%
# mutate(Rank=round(13-rank(Global_Sales,na.last = TRUE,ties.method="last"))) %>%
mutate(Rank=row_number(Year)) %>%
ungroup() %>%
mutate(texto = paste0(Genre, "\n",
Year, ": ",
format(round(Global_Sales*1000000, 0),
big.mark = ","), "\n",
"Pozycja: ", Rank))
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>% filter(Year == max(Year)),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
#,aspect.ratio=4/10
#,plot.background = element_rect(fill = "#141414")
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
game_sales %>%
aggregate(.~Name, FUN = sum)
game_sales %>%
aggregate(Name, FUN = unique)
game_sales %>%
aggregate(.~Name, FUN = unique)
game_sales %>%
aggregate(.~Name, FUN = sum)
game_sales %>%
ggplot(aes(Year))+
geom_bar(na.rm=T,color="black",fill="#8800FF")+
labs(title="Publikacje gier na przestrzeni lat",
x="Rok publikacji",
y="Liczba tytułów")+
#  scale_x_discrete()+
#  scale_x_discrete(breaks = 1980:2020)+
scale_x_continuous(breaks=seq(1980,2016,by=2))+
geom_hline(yintercept = c(500,1000), linetype = "dashed", color = "black", alpha = 0.8, size=1.3)+
theme_classic(base_size = 40)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 48, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
#,plot.background = element_rect(fill = "#141414")
)
#8800FF
t1 <- game_sales %>%
select(Year,Platform) %>%
aggregate(.~Platform, FUN = min) %>%
pivot_longer(-Platform) %>%
mutate(min = value) %>%
select(Platform, min)
t2 <- game_sales %>%
select(Year,Platform) %>%
aggregate(.~Platform, FUN = max) %>%
pivot_longer(-Platform) %>%
mutate(max = value) %>%
select(Platform, max)
t <- merge(t1,t2, by="Platform", sort=T)
t[order(t$min),] %>%
`row.names<-`(NULL) %>%
`colnames<-`(c("Platforma","Rok startu","Rok końca")) %>%
kbl() %>%
kable_styling()%>%
scroll_box(width = "100%", height = "200px")
t3 <- game_sales %>%
select(Year,Platform,Name) %>%
aggregate(.~Platform+Year, FUN = sum)
t3 <- t3[order(t3$Platform),]
library(geomtextpath)
t3 %>%
ggplot(aes(x=Platform,y=Year))+
geom_textline(aes(label=Platform),size=1.7)+
scale_y_continuous(breaks=seq(1980,2016,by=2))+
#scale_color_gradient(low="red",high="green")+
geom_hline(yintercept = seq(1980,2016,by=2), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
coord_flip()+
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
)
rm(list = c('t','t1','t2'))
t3 %>%
ggplot(aes(x=Platform,y=Year))+
geom_textline(aes(label=Platform),size=5)+
scale_y_continuous(breaks=seq(1980,2016,by=2))+
#scale_color_gradient(low="red",high="green")+
geom_hline(yintercept = seq(1980,2016,by=2), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
coord_flip()+
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
)
t3 %>%
ggplot(aes(x=Platform,y=Year))+
geom_textline(aes(label=Platform),size=4)+
scale_y_continuous(breaks=seq(1980,2016,by=2))+
#scale_color_gradient(low="red",high="green")+
geom_hline(yintercept = seq(1980,2016,by=2), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
coord_flip()+
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
)
t3 %>%
ggplot(aes(x=Platform,y=Year))+
geom_textline(aes(label=Platform),size=4.3)+
scale_y_continuous(breaks=seq(1980,2016,by=2))+
#scale_color_gradient(low="red",high="green")+
geom_hline(yintercept = seq(1980,2016,by=2), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
coord_flip()+
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 32, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
)
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>% filter(Year == max(Year)-1),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>% filter(Year == max(Year)),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
ggdane
rbind(ggdane,list(Genre="Puzzle",Year=2016)
)
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>%
group_by(Genre) %>%
filter(Year == max(Year) %>%
ungroup()),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
)
gg <- ggdane %>%
ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
scale_x_continuous(breaks=seq(1980,2016,by=1))+
scale_y_reverse(breaks=seq(12,1,by=-1))+
#geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
geom_line_interactive(size = 1.2,
alpha = 0.4) +
geom_point_interactive(
aes(tooltip = texto), #specifies tooltip for ggiraph
fill = "white",
size = 2.5,
stroke = 1.5,
shape = 21) +
geom_text_interactive(data = ggdane %>%
group_by(Genre) %>%
filter(Year == max(Year)),
aes(x = Year + 1.1, y = Rank,
color = Genre,
label = Genre),
check_overlap = T)+
labs(x = NULL, y = NULL) +
theme_classic(base_size = 20)+
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
,plot.title = element_text(color = "black", size = 22, face = "bold")
,plot.subtitle = element_text(size = 25, face = "bold")
,plot.caption = element_text(face = "italic")
,legend.position = "none"
)
girafe(ggobj = gg,
width_svg = 21, height_svg = 10, #sizes the output plot
options = list(
opts_tooltip(
opacity = 0.8, #opacity of the background box
css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
opts_hover(css = "stroke-width: 4; opacity: 1;")
)
)
View(ggdane)
