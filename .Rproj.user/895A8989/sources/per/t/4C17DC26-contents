---
title: "Analiza sprzedaży gier video 1980-2016"
subtitle: "Projekt v.3.0.3"
author: "Michał Koziński"
format: 
  html:
    page-layout: full
    toc: true
    toc-depth: 3
    theme: pulse
    # self-contained: true
date: "`r Sys.Date()`"
---

<style type="text/css">
.main-container {
  max-width: 2100px;
  margin-left: auto;
  margin-right: auto;
}
</style>

```{r notatki, eval=FALSE, include=FALSE}

1. Co jest celem badawczym, co chcemy uzysakć, co chcemy zbadać?
2. Opis analizowanych danych, wizualizacja, podstawowe statystyki,
- ważne jest aby skomentować dane
- co się nasuwa na myśl jako analityk
- zaznaczyć jakie zmienne ma sie do wykorzystania
3. Import danych i ich oczyszczenie
4. Postawienie hipotez badawczych, warto opisać co się chce zbadać, może zbudować model predykcyjny?
5. Podsumowanie



pomysły:
  - (wydawcy/lata)jak radzili sobie wydawcy na oprzestrzeni lat #za dużo wydawców
  - 1(wydawcy [z podziałem na rynki]/lata)jak dani wydawcy radzili sobie na poszczególnych rynkach (np. wykres liniowy dla konkretnego rynku) #za dużo wydawców
  #- (sprzedaż w regionach/lata)sprzedaż w danym regionie w stosunku do roku
  - (platformy/lata)okres życia platform na podstawie roku publikacji #31 platofrm
  - ??? (sprzedaż w regionach/sprzedaż)wykres kołowy! udziału w sprzedarzy poszczególnych rynków #chciałem zrobić z podziałem na lata zrobinym na interaktywnej osi
  - (gatunki/lata)jakie gatunki były popularne w danym okresie czasu #12 gatunków
  - (wydawcy/gatunki)z jakich gatunkow dani wydawcy sa najbardziej znani #tabelka #za dużo wydawców
  - 1(wydawca / sprzedaż w regionach)zależność wydawcy ze sprzedarzą w danym regionie #ze względu na ilość wydawców zrobić najlepsi wydawcy w danych regionach #tabelka #ancova #za dużo wydawców
  - (gatunki/regiony)najlepsze gatunki w danym regionie #tabelka #mapka
  - (platformy/region)najlepsze platformy w danym regionie #tableka #mapka
  - !model prognozujacy sprzedarz na podstawie wydawcy, platformy i gatunku, roku - las losowy

zależność: chi^2 niezależności

model:
  drzewa decyzyjne:
  <https://www.statmethods.net/advstats/cart.html>

rok utworzenia zbioru 2020
```

```{r biblioteki, include=FALSE}
library(tidyverse) #ogólne
library(ggplot2) #wykresy
library(kableExtra) #tabelki
library(doParallel) #przyśpieszenie sprzętowe
registerDoParallel(cores = 8)
library(magick) #animowane wykresy
library(gganimate) #animowane wykresy
library(ggiraph) #interaktywne wykresy
library(ggthemes) #wykresy
library(highcharter) #interaktywne placki
library(forcats) #do tworzenia 'others'
#library(geomtextpath) #był potrzebny do cyklu zycia platform (nieinteraktywnego)
library(tidymodels) #las losowy
library(usemodels) #tuning modeli
library(textrecipes) #tuning modeli - instrukcja
library(vip) #porownanie waznosci zmiennych w modelach
```

# Przedstawienie zbioru danych

### Źródło danych

Zbiór danych pochodzi ze stronny *Kaggle*:

<https://www.kaggle.com/datasets/arslanali4343/sales-of-video-games>.

### Zawartość zbioru

Zbiór danych jest zestawieniem wyników sprzedażowych gier video z lat 1980 - 2016 z uwzględnieniem platofrmy, na jaką zostały wydane, roku publikacji, gatunku i wydawcy. Zawarte zostały w nim tylko tytuły, które sprzedały się w liczbie większej niż 100 000 kopii. Zbiór uwzględnia wyniki sprzedażowe w Ameryce Północnej, Europie i Japonii.

<br/>

### Przedstawienie zmiennych

Zmienne zawarte w zbiorze:

-   `Rank` - Ranking ogólnej sprzedaży 

-   `Name` - Nazwa gry

-   `Platform` - Platforma wydania gry (np. PS3, SNES, PC etc.)

-   `Year` - Rok publikacji gry

-   `Genre` - Gatunek gry

-   `Publisher` - Wydawca gry

-   `NA_Sales` - Liczba sprzedanych kopii w Ameryce Północnej (w milionach)

-   `EU_Sales` - Liczba sprzedanych kopii w Europie (w milionach)

-   `JP_Sales` - Liczba sprzedanych kopii w Japonii (w milionach)

-   `Other_Sales` - Liczba sprzedanych kopii w pozostałych regionach (w milionach)

-   `Global_Sales` - Łączna liczba sprzedanych kopii na całym świecie  (w milionach)

<br/>

------------------------------------------------------------------------

# Cele badawcze

<details>

  <summary>Cele badawcze</summary>

Celem badawczym projektu było przygotowanie zbioru do analizy statystycznej, wizualizacja danych, przeprowadzenie i interpretacja analizy korespondencji oraz zbudowanie i ocena modelu predykcyjnego liczby sprzedanych kopii.

</details>

<br/>

___

# Przygotowanie zbioru

<details>

  <summary>Przygotowanie zbioru</summary>

<br/>

### Wczytanie danych

```{r wczytanie danych}
game_sales <- read.csv("C:/Users/Michc/Dropbox/Uczelnia/Semestr 5/Projekt z analizy danych/Projekt/dane/video_games.csv",na.strings = "N/A") 
game_sales <- game_sales %>%
  `rownames<-`(NULL)
```

<br/>

### Czyszczenie danych


#### Zmiana typu danych z *char* na *factor*

```{r czyszczenie danych}
game_sales$Name <- as.factor(game_sales$Name)
game_sales$Platform <- as.factor(game_sales$Platform)
game_sales$Genre <- as.factor(game_sales$Genre)
game_sales$Publisher <- as.factor(game_sales$Publisher)
```


#### Zamiana roku produkcji z *char* na *numeric*

```{r}
game_sales$Year <- as.numeric(game_sales$Year)
```


<br/>

### Obsługa braków danych


#### Zmiana *"unknown"* na *NA*

```{r}
game_sales[which(game_sales$Publisher=="Unknown"),6] <- NA

```


#### Lokalizowanie braków

<!-- <span style='font-size:20px'>Zestawienie braków danych z podziałem na zmienne</span> -->

```{r tabelka braków danych, eval=T, include=T, echo=F, fig.width = 21, fig.height = 10}
#zestawienie braków danych z podziałem na kolumny
kbl(tibble(Rank=sum(is.na(game_sales$Rank)),
       Name=sum(is.na(game_sales$Name)),
       Platform=sum(is.na(game_sales$Platform)),
       Year=sum(is.na(game_sales$Year)),
       Genre=sum(is.na(game_sales$Genre)),
       Publisher=sum(is.na(game_sales$Publisher)),
       NA_Sales=sum(is.na(game_sales$NA_Sales)),
       EU_Sales=sum(is.na(game_sales$EU_Sales)),
       JP_Sales=sum(is.na(game_sales$JP_Sales)),
       Other_sales=sum(is.na(game_sales$Other_Sales)),
       Global_Sales=sum(is.na(game_sales$Global_Sales)),
       'Year & Publisher'=count(game_sales[which(is.na(game_sales$Year) & is.na(game_sales$Publisher)),])), table.attr = "style = \"color: black;\""
       ,caption = "<span style='font-size:30px'>Zestawienie braków danych z podziałem na zmienne</span>"
    ) %>%
  kable_styling("basic", full_width = T,position = "float_left") %>%
  column_spec(c(4,6), color = "#FF3030") %>%
  column_spec(12, color = "orange") %>%
  column_spec(c(1:3,5,7:11), color = "#1E90FF")
```
<br/>

$407$ obserwacji z brakami danych jest niewielką liczbą w skali $16\,598$ $(\sim2.45\%)$. Usunięcie tych obserwacji nie wpłynie w znaczący sposób na wartość naukową zbioru.

```{r eval=T, include=T, echo=F}
missings <- game_sales[which(is.na(game_sales$Year) | is.na(game_sales$Publisher)),] %>%
  mutate(Rank = as.numeric(Rank))
#median(missings$Rank)
#mean(missings$Global_Sales)

#jakie statystyki mają wartości z brakami
tibble("Średnia z `Rank`"= mean(missings$Rank),"Mediana z `Global_Sales`"= median(missings$Global_Sales)) %>%
  kbl() %>%
  kable_styling()

rm(list = c('missings'))
```

```{r}
game_sales <- na.omit(game_sales)
```

<br/>

### Obserwacje nietypowe

W zbiorze znalazły się obserwacje nietypowe

```{r eval=TRUE, include=TRUE, echo=FALSE}
data.frame(game_sales[which(game_sales$Year>2016),]) %>%
  `rownames<-`(NULL) %>%
  select(Rank,Name,Platform,Year,Genre,Publisher,Global_Sales) %>%
  kbl() %>%
  kable_styling()
```

<br/>

Są to $4$ obserwacje, których `rok wydania` jest późniejszy niż innych obserwacji ujętych w zbiorze, poza tym wykracza poza lata deklarowane w opisie zbioru na stronie źródłowej.

Ilość sprzedanych kopii wśród tych obserwacji jest niewielka, co potwierdza ich pozycja w rankingu, przez co zdecydowałem się na usunięcie tych obserwacji.

```{r}
game_sales <- game_sales[-which(game_sales$Year>2016),]
```

<br/>

W zbiorze znalazła się obserwacja, która w znacznym stopniu może zakłamywać statystki, a także utrudniać budowanie modeli predykcyjnych. Jest to obserwacja sklasyfikowana na pierwszej pozycji względem globalnej sprzedaży. 

```{r echo=FALSE}
head(game_sales,n=1) %>%
  kbl() %>%
  kable_styling()
```

Jej wynik globalnej sprzedaży przewyższa ponad dwukrotnie wynik tytułu znajdującego się na drugiej pozycji, a wynika to z faktu, że gra była dołączana za darmo do każdej zakupionej konsoli *Nintendo Wii*. 

Ze względu na znaczący wpływ na otrzymywane wyniki, jaki miała owa obserwacja, postanowiłem prowadzić dalsze prace na zbiorze bez uwzględniania jej.

```{r}
game_sales <- game_sales[-1,]
```

<br/>

Ponad to wśród danych znalazła się gra, której rok wydania jest dużo wcześniejszy od innych gier wydanych na przypisaną jej platformę.

```{r echo=FALSE}
game_sales[which(game_sales$Platform=="DS"),] %>%
  ggplot(aes(x=Year))+
  geom_boxplot()+
  scale_x_continuous(breaks=seq(1980,2016,by=1))+
  labs(
    title="Gry wydane na Nintendo DS",
    x="Rok wydania"
  )+
  theme_classic(base_size = 10)+
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
    ,plot.title = element_text(color = "black", size = 17, face = "bold")
    ,plot.subtitle = element_text(size = 25, face = "bold")
    ,plot.caption = element_text(face = "italic")
    ,axis.text.y = element_blank()
    ,legend.position = "none"
    ,legend.background = element_rect(fill = "white")
    ,legend.title = element_blank()
  )

game_sales[which(game_sales$Platform=="DS"&game_sales$Year==1985),] %>%
  arrange(Year) %>%
  select(Rank,Name,Platform,Year,Genre,Global_Sales) %>%
  head(1) %>%
  kbl() %>%
  kable_styling()
```
Platforma, na którą został wydany ów tytuł, miała premierę 21.11.2004, więc jest to niemożliwe, by jakakolwiek gra została na nią wydana przed 2004 rokiem. Udało mi się ustalić, że prawidłowa data premiery tego tytułu do 07.05.2010r. 

```{r}
game_sales[which(game_sales$Platform=="DS"&game_sales$Year==1985),"Year"] <- 2010
```

```{r eval=TRUE, include=TRUE, echo=FALSE}
rownames(game_sales) <- 1:nrow(game_sales)
game_sales <- game_sales %>%
  mutate(Rank = rownames(game_sales))
```


</details>

<br/>

___

# Opis zbioru

<details>

  <summary>Opis zbioru</summary>

<br/>

### Podstawowe statystki opisowe 

<!-- min, średnia, kwantyle (w tym mediana), max, sd -->

<br/>

```{r tabelka statystyk opisowych, eval=T, include=T, echo=F}
#Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
t <- data.frame(cbind(
  round(head(tibble(summary(game_sales$Year)),6),0),
  round(head(tibble(summary(game_sales$EU_Sales)),6),2),
  round(head(tibble(summary(game_sales$NA_Sales)),6),2),
  round(head(tibble(summary(game_sales$JP_Sales)),6),2),
  round(head(tibble(summary(game_sales$Other_Sales)),6),2),
  round(head(tibble(summary(game_sales$Global_Sales)),6),2)))

colnames(t) <- c("Year","EU_Sales*","NA_Sales*","JP_Sales*","Other_Sales*","Global_Sales*")

row.names(t) <- c("Minimum","Q1","Mediana","Średnia","Q3","Maksimum")

kbl(t) %>%
  kable_styling(full_width = T) %>%
  add_footnote(label = "* liczba sztuk w milionach",notation = "none")

remove(t)
```


<br/>



<br/>

### Dane kategoryczne

Zbiór zawiera `r nlevels(game_sales$Name)` różnych tytułów gier, którym przyporządkowano `r nlevels(game_sales$Genre)` gatunków. Gry znadujące się w zbiorze zostały wydane przez `r nlevels(game_sales$Publisher)` wydawców, na `r nlevels(game_sales$Platform)` platform.


</details>

<br/>

___

# Wizualizacja

<details>

  <summary>Wizualizacja</summary>
  
### Tytuły
  
```{r wykres publikacji, fig.width = 21, fig.height = 10, eval=T, include=T, echo=F}
game_sales %>%
ggplot(aes(Year))+
  geom_bar(na.rm=T,color="black",fill="#8800FF")+
  labs(title="Publikacje gier na przestrzeni lat",
       x="Rok publikacji",
       y="Liczba tytułów")+
  scale_x_continuous(breaks=seq(1980,2016,by=2))+
  geom_hline(yintercept = c(500,1000), linetype = "dashed", color = "black", alpha = 0.8, linewidth=1.3)+
  theme_classic(base_size = 40)+
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
    ,plot.title = element_text(color = "black", size = 48, face = "bold")
    ,plot.subtitle = element_text(size = 25, face = "bold")
    ,plot.caption = element_text(face = "italic")
    #,plot.background = element_rect(fill = "#141414")
  )


#8800FF
```

Jak widać ilość tutułów, które osiągały sprzedaż powyżej 100tys. kopii wzrastała aż do 2008 roku, co wynika z dopiero rozwijającego się rynku gier video, a co za tym idzie ilości wydawanych tytułów, jak i wielkości grupy potencjalnych nabywców. W późniejszych latach obserwujemy spadek wcześniej spomniajnej liczby tytułów, co wynika z faktu, iż gry z późniejszych lat nie zdążyły sprzadać minimalnej liczby kopii, by zostać ujęte w zbiorze.


### Sprzedaż

```{r wykres sprzedazy, fig.width = 21, fig.height = 10, eval=T, include=T, echo=F,message=FALSE,warning=FALSE}
game_sales %>%
  mutate(Europa = EU_Sales,USA = NA_Sales,Japonia = JP_Sales,Other=Other_Sales) %>%
  select(Year,Europa,USA,Japonia,Other) %>%
  aggregate(.~Year, sum) %>%
  pivot_longer(-Year) %>%
  ggplot()+
    geom_smooth(aes(Year,value*100000,colour=name),se=F, linewidth = 3)+
    labs(title="Łączna sprzedaż gier wydawanych w poszczególnych latach z podziałem na regiony",
         x="Rok wydania",
         y="Liczba sprzedanych kopii")+
    scale_x_continuous(breaks=seq(1980,2016,by=2))+
    scale_y_continuous(labels = scales::label_number(big.mark = " ", decimal.mark = ",", scale = 1/1000000, suffix = " mln"), position = "right")+
    scale_color_manual(values = c("blue","red","grey40","green"))+
    theme_classic(base_size = 40)+
    theme(
      axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
      ,axis.text.y = element_text(angle = -30, vjust=0)
      ,plot.title = element_text(color = "black", size = 32, face = "bold")
      ,plot.subtitle = element_text(size = 25, face = "bold")
      ,plot.caption = element_text(face = "italic")
      ,legend.position = c(0.2, 0.75)
      ,legend.background = element_rect(fill = "white")
      ,legend.title = element_blank()
    )
```

Wykres ten obrazuje jak rozwijały się poszczególne rynki. Można zauważyć, że rynek Amrerykański zaczynał już z delikatną przewagą względem pozostałych rynków, co może wynikać z popularności automatów do gier, która szczególnie zauważalna była właśnie na tym rynku, ponad to USA jest kolebką komputerów osobistych, co niewątpliwie wpłynęło na omawiany rynek.

Następnie widać, jak wczesny wzrost zanotował rynek Japoński, w którym to właśnie gry video (szczególnie za pośrednictwem konsol) bardzo szybko zaczęły zyskiwać na popularności. Jednak dalszy rozwój tego rynku został szybko wyhamowany niewielką liczbą konsumentów.

Pzostałe rynki notują wzrosty w podobnych okresach co rynek amerykański obrazując globalny rozwój rynku gier video.

Spadek w późniejszych latach wynika z tych samych powodów, co w przypadku liczby wydawnaych tytułów, jak i samej tej liczby.

<br/>


### Platformy 

```{r echo=FALSE,eval=TRUE,include=TRUE,message=FALSE,warning=FALSE, fig.width = 21, fig.height = 15}

t3 <- game_sales %>%
  select(Year,Platform,Name) %>%
  aggregate(.~Platform+Year, FUN = sum) 

t3 <- t3[order(t3$Platform),] %>%
  group_by(Platform)%>%
  mutate(texto = paste0(Platform, "\n",
                        min(Year), "-",max(Year)
                        ))

# interaktywny
gg <- t3 %>%
  ggplot(aes(y=Platform,x=Year))+
  scale_x_continuous(breaks=seq(1980,2016,by=1))+
  # geom_hline(xintercept = seq(1980,2016,by=1), linetype = "dashed", color = "black", alpha = 0.5, size=0.1)+
  geom_line_interactive(size = 1.2,
                        alpha = 0.4,
                        aes(tooltip = texto)) +
  geom_point_interactive(data = t3 %>%
                          group_by(Platform) %>%
                          filter(Year == max(Year) | Year == min(Year)),
                        aes(tooltip = texto), #specifies tooltip for ggiraph
                          fill = "white",
                          size = 2.5,
                          stroke = 1.5,
                          shape = 21) +
  geom_text_interactive(data = t3 %>%
                          group_by(Platform) %>%
                          filter(Year == max(Year)),
                        aes(x = Year + 0.7, y = Platform,
                            color = Platform,
                            label = Platform),
                        check_overlap = T)+
  theme_classic(base_size = 20)+
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
    ,plot.title = element_text(color = "black", size = 32, face = "bold")
    ,plot.subtitle = element_text(size = 25, face = "bold")
    ,legend.position = "none"
  )

girafe(ggobj = gg,
       width_svg = 21, height_svg = 10, #sizes the output plot
       options = list(
          opts_tooltip(
            opacity = 0.8, #opacity of the background box
            css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
       opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
       opts_hover(css = "stroke-width: 4; opacity: 1;")
       )
)



rm(list = c('t3','gg'))
```

Wykres wykorzystując lata wydań tytułów pokazuje przybliżony czas "życia" poszczególnych platform (okresów w jakim były wspierane przez twórców). Bez żadnego zaskoczenia najdłużej wspieraną platformą jest PC (komputery osobiste).


```{r eval=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.width = 21, fig.height = 15}
ggdane <- game_sales

ggdane2 <- ggdane %>%
  mutate(Sales=Global_Sales*10000000) %>%
  select(Platform,Sales) %>%
  aggregate(.~Platform, FUN = sum, drop = FALSE)

ggdane$Platform <- fct_collapse(ggdane$Platform, Other = as.vector(ggdane2$Platform[which(ggdane2$Sales<sum(ggdane2$Sales*0.01))]))

ggdane$Sort <- ggdane$Sort <- c(rep(0,nrow(ggdane)))
ggdane$Sort[which(ggdane$Platform == "Other")] <- 1

ggdane%>%
  mutate(Sales=Global_Sales*10000000) %>%
  select(Platform,Sales,Sort) %>%
  aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
  group_by(Platform) %>%
  arrange(Sort,desc(Sales),Platform) %>%
  ungroup() %>%
  mutate(texto = paste0(Platform," ", 
                        round(Sales/sum(Sales)*100,2),"%")) %>%
  hchart("pie", 
          hcaes(x = texto, y = Sales),
          name = "Sprzedanych kopii gier"
  ) %>%
  hc_title(
    text = "Udział platform w rynku growym w latach 1980-2016",
    margin = 20,
    align = "left",
    style = list(color = "black", useHTML = TRUE)
  )

```

Wykres wykorzystując liczbę sprzedanych danych kopii gier obrazuje udział poszczególnych platform w ogólnoświatowej sprzedaży gier video.

*Platformy mające udział mniejszy od 1% zostały scalone w grupę 'Other'*

<br>

```{r eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, fig.width = 5.5, fig.height = 4}
#| layout-ncol: 3

ggdane <- game_sales

ggdane2 <- ggdane %>%
  mutate(Sales=NA_Sales*10000000) %>%
  select(Platform,Sales) %>%
  aggregate(.~Platform, FUN = sum, drop = FALSE) 

ggdane$Platform <- fct_collapse(ggdane$Platform, Other = as.vector(ggdane2$Platform[which(ggdane2$Sales<sum(ggdane2$Sales*0.01))]))

ggdane$Sort <- ggdane$Sort <- c(rep(0,nrow(ggdane)))
ggdane$Sort[which(ggdane$Platform == "Other")] <- 1

ggdane%>%
  mutate(Sales=NA_Sales*10000000) %>%
  select(Platform,Sales,Sort) %>%
  aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
  group_by(Platform) %>%
  arrange(Sort,desc(Sales),Platform) %>%
  ungroup() %>%
  mutate(texto = paste0(Platform," ", 
                        round(Sales/sum(Sales)*100,0),"%")) %>%
    hchart("pie", 
           hcaes(x = texto, y = Sales),
           name = "Sprzedanych kopii gier w Ameryce Północnej"
    ) %>%
    hc_title(
      text = paste0("Udział platform w Ameryce Północnej w latach 1980-2016, łączna sprzedaż: ",format(round(sum(game_sales$NA_Sales*10000000), 0),big.mark = ",")),
      align = "left",
      style = list(color = "black", useHTML = TRUE)
    )


# game_sales %>%
#   mutate(Sales=EU_Sales*10000000) %>%
#   select(Platform,Sales) %>%
#   aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
#   group_by(Platform) %>%
#   arrange(desc(Sales),Platform) %>%
#   ungroup() %>%
#   mutate(texto = paste0(Platform," ", 
#                         round(Sales/sum(Sales)*100,2),"%")) %>%
#     hchart("pie", 
#            hcaes(x = texto, y = Sales),
#            name = "Sprzedanych kopii gier w Europie"
#     ) %>%
#     hc_title(
#       text = "Udział platform w Europie w latach 1980-2016",
#       align = "left",
#       style = list(color = "black", useHTML = TRUE)
#     )

ggdane <- game_sales

ggdane2 <- ggdane %>%
  mutate(Sales=EU_Sales*10000000) %>%
  select(Platform,Sales) %>%
  aggregate(.~Platform, FUN = sum, drop = FALSE) 

ggdane$Platform <- fct_collapse(ggdane$Platform, Other = as.vector(ggdane2$Platform[which(ggdane2$Sales<sum(ggdane2$Sales*0.01))]))

ggdane$Sort <- c(rep(0,nrow(ggdane)))
ggdane$Sort[which(ggdane$Platform == "Other")] <- 1

ggdane%>%
  mutate(Sales=EU_Sales*10000000) %>%
  select(Platform,Sales,Sort) %>%
  aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
  group_by(Platform) %>%
  arrange(Sort,desc(Sales),Platform) %>%
  ungroup() %>%
  mutate(texto = paste0(Platform," ", 
                        round(Sales/sum(Sales)*100,0),"%")) %>%
    hchart("pie", 
           hcaes(x = texto, y = Sales),
           name = "Sprzedanych kopii gier w Europie"
    ) %>%
    hc_title(
      text = paste0("Udział platform w Europie w latach 1980-2016, łączna sprzedaż: ",format(round(sum(game_sales$EU_Sales*10000000), 0),big.mark = ",")),
      align = "left",
      style = list(color = "black", useHTML = TRUE)
    )

# game_sales %>%
#   mutate(Sales=JP_Sales*10000000) %>%
#   select(Platform,Sales) %>%
#   aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
#   group_by(Platform) %>%
#   arrange(desc(Sales),Platform) %>%
#   ungroup() %>%
#   mutate(texto = paste0(Platform," ", 
#                         round(Sales/sum(Sales)*100,2),"%")) %>%
#     hchart("pie", 
#            hcaes(x = texto, y = Sales),
#            name = "Sprzedanych kopii gier w Japonii"
#     ) %>%
#     hc_title(
#       text = "Udział platform w Japonii w latach 1980-2016",
#       align = "left",
#       style = list(color = "black", useHTML = TRUE)
#     )

ggdane <- game_sales

ggdane2 <- ggdane %>%
  mutate(Sales=JP_Sales*10000000) %>%
  select(Platform,Sales) %>%
  aggregate(.~Platform, FUN = sum, drop = FALSE) 

ggdane$Platform <- fct_collapse(ggdane$Platform, Other = as.vector(ggdane2$Platform[which(ggdane2$Sales<sum(ggdane2$Sales*0.01))]))

ggdane$Sort <- c(rep(0,nrow(ggdane)))
ggdane$Sort[which(ggdane$Platform == "Other")] <- 1

ggdane %>%
  mutate(Sales=JP_Sales*10000000) %>%
  select(Platform,Sales,Sort) %>%
  aggregate(.~Platform, FUN = sum, drop = FALSE) %>%
  group_by(Platform) %>%
  arrange(Sort,desc(Sales), Platform) %>%
  ungroup() %>%
  mutate(texto = paste0(Platform," ", 
                        round(Sales/sum(Sales)*100,0),"%")) %>%
    hchart("pie", 
           hcaes(x = texto, y = Sales),
           name = "Sprzedanych kopii gier w Japonii"
    ) %>%
    hc_title(
      text = paste0("Udział platform w Japonii w latach 1980-2016, łączna sprzedaż: ",format(round(sum(game_sales$JP_Sales*10000000), 0),big.mark = ",")),
      align = "left",
      style = list(color = "black", useHTML = TRUE)
    )



rm(list = c('ggdane','ggdane2'))
```

Wykresy przedstawiają jak wygląda udział procentowy platform na największych rynkach

### Gatunki

```{r echo=F, fig.width = 21, fig.height = 10}
#interaktywny
 

ggdane <- game_sales %>%
  select(Year,Genre,Global_Sales) %>%
  aggregate(.~Genre+Year, FUN = sum, drop = FALSE) %>%
  group_by(Year) %>%
  arrange(Year,desc(Global_Sales)) %>%
  # complete(Genre, fill=list(Global_Sales = 0)) %>%
  # mutate(Rank=round(13-rank(Global_Sales,na.last = TRUE,ties.method="last"))) %>%
  mutate(Rank=row_number(Year)) %>%
  ungroup() %>%
  mutate(texto = paste0(Genre, "\n",
                        Year, ": ",
                        format(round(Global_Sales*10000000, 0),
                               big.mark = ","), "\n", 
                        "Pozycja: ", Rank))


gg <- ggdane %>%
  ggplot(aes(x=Year,y=Rank,color=Genre,data_id=Genre,group=Genre,label=Genre))+
  scale_x_continuous(breaks=seq(1980,2016,by=1))+
  scale_y_reverse(breaks=seq(12,1,by=-1))+
  #geom_hline(yintercept = seq(1,12,by=1), linetype = "dashed", color = "black", alpha = 0.4, size=0.7)+
  geom_line_interactive(size = 1.2,
                        alpha = 0.4) +
  geom_point_interactive(
                aes(tooltip = texto), #specifies tooltip for ggiraph
                         fill = "white",
                         size = 2.5,
                         stroke = 1.5,
                         shape = 21) +
  geom_text_interactive(data = ggdane %>% 
                          group_by(Genre) %>%
                          filter(Year == max(Year)),
                        aes(x = Year + 1.5, y = Rank,
                            color = Genre, 
                            label = Genre),
                        size = 5.5,
                        check_overlap = T)+
  labs(y = NULL, x = "Rok publikacji") +
  theme_classic(base_size = 22)+
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
    ,plot.title = element_text(color = "black", size = 22, face = "bold")
    ,plot.subtitle = element_text(size = 25, face = "bold")
    ,plot.caption = element_text(face = "italic")
    ,legend.position = "none"
  )

girafe(ggobj = gg, 
       width_svg = 21, height_svg = 10, #sizes the output plot
       options = list(
          opts_tooltip(
            opacity = 0.8, #opacity of the background box 
            css = "background-color:#4c6061; color:white; padding:10px; border-radius:5px;"),
       opts_hover_inv(css = "stroke-width: 1;opacity:0.6;"),
       opts_hover(css = "stroke-width: 4; opacity: 1;")
       )
)

rm(list = c('ggdane','gg'))
```

Wykres przedstawia pozycjnowanie gatunków gier w poszczególnych latach.

Można z niego odczytać jakie gatunki były popularne w danym okresie czasu.

<br/>

```{r echo=FALSE}
N_A <- game_sales %>%
  mutate(Sales=NA_Sales*10000000) %>%
  select(Genre,Sales) %>%
  aggregate(.~Genre, FUN = sum, drop = FALSE) %>%
  group_by(Genre) %>%
  arrange(desc(Sales), Genre) %>%
  ungroup() %>%
  select(Genre)

EU <- game_sales %>%
  mutate(Sales=EU_Sales*10000000) %>%
  select(Genre,Sales) %>%
  aggregate(.~Genre, FUN = sum, drop = FALSE) %>%
  group_by(Genre) %>%
  arrange(desc(Sales), Genre) %>%
  ungroup() %>%
  select(Genre)

JP <- game_sales %>%
  mutate(Sales=JP_Sales*10000000) %>%
  select(Genre,Sales) %>%
  aggregate(.~Genre, FUN = sum, drop = FALSE) %>%
  group_by(Genre) %>%
  arrange(desc(Sales), Genre) %>%
  ungroup() %>%
  select(Genre)

Gat_reg <- data.frame(1:12,N_A,EU,JP)
colnames(Gat_reg) <- c("Pozycja","Ameryka Północna","Europa","Japonia")
Gat_reg %>%
  head(5) %>%
  kbl(caption = "<span style='font-size:20px'>Zestawienie najpopularniejszych gatunków z podziałem na regiony</span>") %>%
  kable_styling()

rm(list = c('N_A','EU','JP','Gat_reg'))
```

Ameryka Północna i Europa są zbliżone pod kątem popularności poszczególnych gatunków, na obu tych rynkach najpopularniejsze są gry akcji, na drugim miejscu gry sportowe, na trzeciem shootery, różnice widać dopiero na czwartym miejscu. Natomiast w Japonii największą popularnością cieszą się gry RPG (gry RPG pochodzące z Japonii różnią się od typowych gier RPG i nazwyane są JRPG'ami), co najprawdopodobniej wynika z popularności JRPG'ów.

</details>

<br/>

___

# Analiza korespondencji

<details>

  <summary>Analiza korespondencji</summary>
  
<br/>

```{r fig.width = 21, fig.height = 10, echo=FALSE, message=FALSE}
#macierz kontyngencji
mat <- matrix(nrow = length(levels(game_sales$Platform)),ncol = length(levels(game_sales$Genre))) #Publisher odpada, bo ma za dużo leveli

colnames(mat) <-  levels(game_sales$Genre)
rownames(mat) <- levels(game_sales$Platform)

for(i in 1:length(levels(game_sales$Genre))){
  for(j in 1:length(levels(game_sales$Platform))){
    mat[j,i] <- length(which(game_sales$Platform==levels(game_sales$Platform)[j] & game_sales$Genre==levels(game_sales$Genre)[i]))
  }
}

dt <- as.table(as.matrix(mat))

gplots::balloonplot(t(dt), main ="Gatunek x Platforma", xlab ="", ylab="",
            label = FALSE, show.margins = FALSE) 
```
Przed przystapieniem do przeprowadzania *analizy korespondencji* należy sprawdzić, czy cechy nie są niezależne.

```{r fig.width = 21, fig.height = 14, warning=FALSE}
chisq.test(as.data.frame(mat)) 
```

Test $\chi^2$ odrzucił hipotezę o niezależności cech.

`$coord` - położenie w przestrzeni

`$contrib` - udział w tworzeniu wymiaru

`$cos2` - poziom wyjaśniania przez dany wymiar

`$inertia` - odleglość od środka układu

### Wiersze

```{r}
res.ca <- FactoMineR::CA(as.data.frame(mat), graph = FALSE)
res.ca$row 
```

```{r fig.width = 17, fig.height = 4, echo=FALSE}
row <- factoextra::get_ca_row(res.ca)

corrplot::corrplot(t(row$contrib), is.corr=FALSE, title = "contrib",mar=c(0,0,3,0))
```

Najwiekszy udział w tworzeniu *pierwszego wymiaru* ma `DS`, *drugiego* `PC`, *trzeciego* `PSV`, *czwartwego* `SNES` i *piątego* `GBA`

```{r fig.width = 17, fig.height = 4, echo=FALSE}
corrplot::corrplot(t(row$cos2), is.corr=FALSE, title = "cos^2",mar=c(0,0,3,0))
```

*Pierwszy wymiar* najlepiej wyjaśnia zmienność `DS`,`3DO`, `XB`, `X360`, `XOne` (co ciekawe 3 ostatnie to konsole Microsoftu), *drugi* wyjaśnia zmienność przede wszystkim `PC`, *trzeci* `PSV`,`PS4` i `3DS`, *trzeci* `SNES`, `GEN` i `DC` (2 ostatnie należą do Segi), a *piąty* `GBA`, `NES`, `GG`. 

W każdym wymiarze, oprócz *drugiego*, wśród platform z najlepiej wyjaśnianą zmiennością znalzała się konsola Nintendo.

### Kolumny

```{r}
res.ca$col 
```

```{r fig.width = 10, fig.height = 5, echo=FALSE}
col <- factoextra::get_ca_col(res.ca)
corrplot::corrplot(t(col$contrib), is.corr=FALSE, title = "contrib",mar=c(0,0,3,0))
```

Najwiekszy udział w tworzeniu *pierwszego wymiaru* ma `Puzzle`, *drugiego* `Strategy`, *trzeciego* `Action`, *czwartwego* `Fighting` i `Action`, a *piątego* `Platform`

```{r fig.width = 10, fig.height = 5, echo=FALSE}
corrplot::corrplot(t(col$cos2), is.corr=FALSE, title = "cos^2",mar=c(0,0,3,0))
```

*Pierwszy wymiar* najlepiej wyjaśnia zmienność `Puzzle`,`Simulation`, `Racing`, `Sports`, `Shooter`, *drugi* wyjaśnia zmienność przede wszystkim `Strategy` (w przypadku wierszy *drugi wymiar* wyjaśniał głownie `Pc`), *trzeci* `Action`, *trzeci* `Fighting`, a *piąty* `Platform`. 

### Wykres osypiska

```{r echo=FALSE}
factoextra::fviz_screeplot(res.ca, addlabels = TRUE, ylim = c(0, 35)) #5 wymiarów wyjaśni ~90%
```
3 wymiary wyjaśniają $66,3\%$, 4 wymiary wyjaśniają już $79,1\%$, a 5 wymiarów $89,9\%$

### Mapa percepcji

```{r fig.width = 21, fig.height = 14, warning=FALSE, echo=FALSE}
factoextra::fviz_ca_biplot(res.ca, repel = TRUE)
```

W pobliżu `Paltform` widzimi takie konsole jak `GBA`,`NES`,`Wii`,`WiiU` są to produkty Nintendo, które jest znane z gier platformowych takich jak np. *Mario* pełniących rolę gier eksluzywnych (gier na wyłączność dla danej platformy/producenta platformy). 

Gatunki takie jak `Fighting`, `Sports`, `Racing` znajdują się niedaleko siebie, gdyż powiązane są z tymi samymi platformami(`XB`,`XOne`,`X360`,`PS3`,`DC`,`N64`,`Gc`), które to właśnie są "domem" dla gier z tych gatunków. Konsole Microsoft'u, które są postrzegane jako najlepsze do "ogrywania" `Shooter`'ów, delikatnie "uciekają" w stronę tego gatunku, natomiast platformy Sony (`PS`,`Ps2`,`PS3`,`PS4`), które również powiązane są z w.wym. gatunkami zbliżają się do `Action`, co również ma odzwierciedlenie w opinii graczy, że to właśnie te konsole są najlepsze do takich gier.

W Pobliżu `Role-Playing` znajdują się konsole przenośne od Sony, `PSV` i `PSP`.

Przy `Adventure` znajduje się kolejna konsola przenośna `3DS`.

`Strategy` powiązane jest tylko z jedną platformą `Pc`.

</details>

<br/>

___


# Modele predykcyjne

<details> 

  <summary>Modele predykcyjne</summary>

## Model predykcyjny - `1`

<details> 

  <summary>Model predykcyjny 1</summary>

<br/>

<details> 

  <summary>Budowa modelu</summary>

```{r message=FALSE, warning=FALSE}
#podział zbioru
set.seed(1410)
sales_split <- initial_split(game_sales, strata = Global_Sales)
sales_train <- training(sales_split)
sales_test <- testing(sales_split)
#deklaracja metody resamplingu
sales_folds <- vfold_cv(sales_train, strata = Global_Sales)
```

```{r eval=TRUE,include=FALSE,echo=FALSE}
#generowanie "przepisu"
use_ranger(Global_Sales ~ Platform+Genre+Publisher, data = sales_train)
```

```{r}
#przepis
ranger_recipe <- 
  recipe(formula = Global_Sales ~ Platform + Genre + Publisher, data = sales_train) 
ranger_spec <- 
  rand_forest(mtry = tune(), min_n = tune(), trees = 1000) %>% 
  set_mode("regression") %>% 
  set_engine("ranger", importance = "impurity") 
#workflow
ranger_workflow <- 
  workflow() %>% 
  add_recipe(ranger_recipe) %>% 
  add_model(ranger_spec) 
#uczenie modelu
set.seed(6164)
# save(ranger_tune,file = "dane/ranger_tune.rda")
load("dane/ranger_tune.rda")
# ranger_tune <-
#   tune_grid(ranger_workflow,
#             resamples = sales_folds,
#             grid = 11,
#             metrics = metric_set(rsq, rmse, mae))
```

```{r}
show_best(ranger_tune, metric = "rmse")
show_best(ranger_tune, metric = "rsq")
show_best(ranger_tune, metric = "mae")
autoplot(ranger_tune)
#finalizacja workflow'u
final_rf <- ranger_workflow %>%
  finalize_workflow(select_best(ranger_tune))
final_rf
#uczenie ostatecznego modelu
sales_fit <- last_fit(final_rf,sales_split)
sales_fit
collect_metrics(sales_fit)
```

```{r eval=FALSE, include=FALSE, echo=FALSE}
collect_predictions(sales_fit) %>%
  ggplot(aes(Global_Sales, .pred)) +
  geom_abline(lty = 2, color = "gray50") +
  geom_point(alpha = 0.5, color = "midnightblue") +
  coord_fixed()
```

</details> 

<details> 

  <summary>Podsumowanie modelu</summary>
  
### Paramtetry ostatecznego modelu

```{r echo=FALSE}
sales_fit %>%
  collect_metrics() %>%
  select(.metric,.estimate) %>%
  `colnames<-`(c("Parametr","Wartość")) %>%
  mutate(Wartość = round(Wartość,3)) %>%
  kbl() %>%
  kable_styling()
```
  
Na podstawie otrzymanych wartości, można powiedzieć, że model nie jest dobrym modelem predykcyjnym.
  
### Porównanie obserwacj i predykcji
  
```{r echo=FALSE, warning=FALSE, message=FALSE}
collect_predictions(sales_fit) %>%
  #ggplot(aes(Global_Sales, .pred))+
  ggplot(aes(.pred, Global_Sales)) +
  scale_x_continuous(breaks = seq(0,16,by=4))+
  scale_y_continuous(breaks = seq(0,40,by=8))+
  geom_abline(lty = 2, color = "black") +
  geom_point(alpha = 0.5, color = "midnightblue") +
  geom_smooth(method = "lm", se = F)+
  coord_fixed(ratio=1, expand=T)+
  coord_flip()+
  labs(x = "Predykcja", y = "Obserwacja", title = "Wykres zestawienia obserwacji i predykcji")+
  theme_classic()+
  theme(plot.title = element_text(color = "black", size = 18, face = "bold")
        ,panel.grid.major = element_line(colour = "gray80", linewidth = 0.001))
```


### Zestawienie istotności zmiennych

```{r echo=FALSE}
sales_fit %>% 
  extract_fit_parsnip() %>%
  vip() +
  theme_classic()
```

Na podstawie modelu wydawca ma największy wpływ na liczbę sprzedanych kopii, platforma i gatunek są drugorzedne.

<!-- </details>  -->

<!-- </details>  -->


<br/>

## Model predykcyjny - `2`

<details> 

  <summary>Model predykcyjny 2</summary>

<br/>

<details> 

  <summary>Budowa modelu</summary>
  
```{r}
#podział zbioru został dokonany przy okazji budowania pierwszeego modelu
#przepis uczenia
rec <- recipe(Global_Sales ~ Platform + Genre + Publisher,
              data = sales_train) %>%
  step_normalize(all_numeric_predictors())

#tuningowanie
rf <- rand_forest(
  mtry = tune(),
  trees = tune(),
  min_n = tune()
) %>%
  set_mode("regression") %>%
  set_engine("ranger", importance = "impurity")

#potencjalne zakresy parametrów
params <- extract_parameter_set_dials(rf)
params <- finalize(params, sales_train)

#metoda resamplingu
rs <- vfold_cv(sales_train, v = 5)#vfold_cv(sales_train, strata = Global_Sales)

#wybór miar do oceny dopasowania
meas <- metric_set(rsq, rmse, mae)

#grid parametrów do uczenia
grid <- grid_latin_hypercube(params, size = 10)
grid %>%
  flextable::flextable()

#workflow
rf_wf <- workflow() %>%
  add_recipe(rec) %>%
  add_model(rf)

#uczenie modelu
# save(rf_res,file="dane/rf_res.rda")
load("dane/rf_res.rda")
# rf_res <-
#   rf_wf %>%
#   tune_grid(
#     resamples = rs,
#     grid = grid,
#     metrics = meas
# )

#wyniki uczenia
rf_res %>%
  collect_metrics() %>%
  flextable::flextable()

#najlepsze modele ze względu na R^2
rf_res %>%
  show_best(metric = "rsq")

#najlepsze modele ze względu na RMSE
rf_res %>%
  show_best(metric = "rmse")

#najlepsze modele ze względu na MAE
rf_res %>% 
  show_best(metric = "mae")

autoplot(rf_res)

# najlepszy okazał się model mtry = 10, trees = 1892 i min_n = 38
# R^2 = 0.162 (mało)    RMSE = 1.280 (dużo)    MAE = 0.494

# ostateczny model

rf_best_param <- select_best(rf_res, metric = "rmse")

#finalizacja workflow'u
rf_final <- 
  rf_wf %>%
  finalize_workflow(rf_best_param)

#uczenie ostatecznego modelu
rf_fit <- rf_final %>%
  last_fit(sales_split, metrics = meas)

```

</details> 

<details> 

  <summary>Podsumowanie modelu</summary>
  
### Paramtetry ostatecznego modelu

```{r echo=FALSE}
rf_fit %>%
  collect_metrics() %>%
  select(.metric,.estimate) %>%
  `colnames<-`(c("Parametr","Wartość")) %>%
  mutate(Wartość = round(Wartość,3)) %>%
  kbl() %>%
  kable_styling()
```
  
Są to parametry uzyskane w finalnym modelu.

`rsq`(R^2) *współczynnik determinacji* powinien osiągać jak największe wartości (tzn. możliwie bliskie 1) - w modelu jest dosyć mały, z tego wynika, że model w niewielkim stopniu wyjaśnia wariancję.

`rmse` *pierwiastek błędu średniokwadratowego* powinnen być możliwie mały - w modelu wynosi 1.396, co jest dużą wartością, gdyż średnia wartość `Global_Sales` w zbiorze testowym wynosi `r mean(sales_test$Global_Sales)`

`mae` *średni błąd absolutny* budując model dążymy do jego minimalizacji - w modelu ma on wartość 0.501, natomiast średnia wartość `Global_Sales` w zbiorze testowym wynosi `r mean(sales_test$Global_Sales)`.
  
### Porównanie obserwacj i predykcji
  
```{r echo=FALSE, warning=FALSE, message=FALSE}
collect_predictions(rf_fit) %>%
  #ggplot(aes(Global_Sales, .pred))+
  ggplot(aes(.pred, Global_Sales)) +
  scale_x_continuous(breaks = seq(0,16,by=4))+
  scale_y_continuous(breaks = seq(0,40,by=8))+
  geom_abline(lty = 2, color = "black") +
  geom_point(alpha = 0.5, color = "midnightblue") +
  geom_smooth(method = "lm", se = F)+
  coord_fixed(ratio=1, expand=T)+
  coord_flip()+
  labs(x = "Predykcja", y = "Obserwacja", title = "Wykres zestawienia obserwacji i predykcji")+
  theme_classic()+
  theme(plot.title = element_text(color = "black", size = 18, face = "bold")
        ,panel.grid.major = element_line(colour = "gray80", linewidth = 0.001))
```

Wykres pokazuje zestawienie przewidywanych przez model ilości sprzedanych kopii, na podstawie wartości ze zbioru testowego, z faktycznymi ilościami sprzedanych kopii znajdującymi się w zbiorze testowym. 

W możliwie najlepszym modelu punkty powinny układać się jak najbliżej przerywanej linii, a niebiska ciągła linia powinna pokrywać się z nią pokrywać.

##### Biorąc pod uwagę, że model budowany był wyłącznie na 3 zmiennych `Global_Sales ~ Platform + Genre + Publisher`, które są zmiennymi jakościowymi, mozna ocenić jakość modelu na zadowalającą, jednak nie można powiedzieć, że model ten jest modelem dobrym pod kątem zastosowań predykcyjnych.

<br>

### Zestawienie istotności zmiennych

Korzystając ze zbudowanego wcześniej modelu można porównać wpływ poszczególnych zmiennych na wartość `Global_Sales`

```{r echo=FALSE}
rf_fit %>% 
  extract_fit_parsnip() %>%
  vip() +
  theme_classic()
```

Na podstawie modelu `wydawca` ma największy wpływ na liczbę sprzedanych kopii, `platforma` i `gatunek` są drugorzedne.
  
</details> 

</details> 

</details> 
